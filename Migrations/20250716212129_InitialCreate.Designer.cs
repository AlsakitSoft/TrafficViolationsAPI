// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrafficViolationsAPI.Data;

#nullable disable

namespace TrafficViolationsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250716212129_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrafficViolationsAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Citizen");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NationalId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TrafficViolationsAPI.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PlateNumber")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("TrafficViolationsAPI.Models.Violation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EvidenceImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("FineAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("OfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OfficerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Violations");
                });

            modelBuilder.Entity("TrafficViolationsAPI.Models.ViolationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<decimal>("DefaultFineAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ViolationTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f651cee-51f9-4b00-bd8e-f2f13bd2a1b3"),
                            CreatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9047),
                            DefaultFineAmount = 300.00m,
                            Description = "تجاوز الحد الأقصى للسرعة المسموح بها",
                            IsActive = true,
                            Name = "تجاوز السرعة المحددة",
                            UpdatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9048)
                        },
                        new
                        {
                            Id = new Guid("1dcfcf94-e9e8-4edb-b38b-737767f25d2c"),
                            CreatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9051),
                            DefaultFineAmount = 150.00m,
                            Description = "عدم استخدام حزام الأمان أثناء القيادة",
                            IsActive = true,
                            Name = "عدم ربط حزام الأمان",
                            UpdatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9051)
                        },
                        new
                        {
                            Id = new Guid("5b19ff63-8d78-45a5-9e50-1c689075a4c5"),
                            CreatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9053),
                            DefaultFineAmount = 500.00m,
                            Description = "استخدام الهاتف المحمول أثناء قيادة المركبة",
                            IsActive = true,
                            Name = "استخدام الهاتف أثناء القيادة",
                            UpdatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9054)
                        },
                        new
                        {
                            Id = new Guid("2ba63307-157f-401f-9416-ac957bbaf4c6"),
                            CreatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9056),
                            DefaultFineAmount = 1000.00m,
                            Description = "تجاوز الإشارة الضوئية الحمراء",
                            IsActive = true,
                            Name = "عدم التوقف عند الإشارة الحمراء",
                            UpdatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9056)
                        },
                        new
                        {
                            Id = new Guid("c0d2783c-415b-4bf0-94f0-dcacd1a7b0c7"),
                            CreatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9061),
                            DefaultFineAmount = 200.00m,
                            Description = "إيقاف المركبة في مكان غير مسموح",
                            IsActive = true,
                            Name = "الوقوف في مكان ممنوع",
                            UpdatedAt = new DateTime(2025, 7, 16, 21, 21, 28, 871, DateTimeKind.Utc).AddTicks(9061)
                        });
                });

            modelBuilder.Entity("TrafficViolationsAPI.Models.Vehicle", b =>
                {
                    b.HasOne("TrafficViolationsAPI.Models.User", "Owner")
                        .WithMany("Vehicles")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("TrafficViolationsAPI.Models.Violation", b =>
                {
                    b.HasOne("TrafficViolationsAPI.Models.User", "Officer")
                        .WithMany("ViolationsIssued")
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrafficViolationsAPI.Models.Vehicle", "Vehicle")
                        .WithMany("Violations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Officer");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("TrafficViolationsAPI.Models.User", b =>
                {
                    b.Navigation("Vehicles");

                    b.Navigation("ViolationsIssued");
                });

            modelBuilder.Entity("TrafficViolationsAPI.Models.Vehicle", b =>
                {
                    b.Navigation("Violations");
                });
#pragma warning restore 612, 618
        }
    }
}
